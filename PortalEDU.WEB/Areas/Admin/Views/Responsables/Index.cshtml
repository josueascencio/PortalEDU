@model PortalEDU.Models.ViewModels.ResponsableVM

@{
        ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>

    @*Cuando no hay registros en las celdas*@
    <style>
        table td:empty::before {
            content: "Sin registros"; color: brown;
        }

        
    </style>

</head>

<br />
<div class="container">
    <div class="row">
        <div class="col-6">
            <h2 class="text-primary">Lista de padres</h2>
        </div>
        <div class="col-6 text-right">
            <a asp-action="Create" class="btn btn-primary"><i class="fas fa-plus"> </i> Crear nuevo alumno</a>
        </div>
    </div>

    <br />
    <br />
    <table id="tblResponsables" class="table table-striped table-bordered table-hover" style=" width:100%;">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Telefono</th>
                <th>Profesion</th>
                <th>Direccion</th>
                <th>Telefono trabajo</th>
                <th>Alumnos</th>
                <th>Foto</th>
                <th></th>
            </tr>
        </thead>
    </table>
</div>



@section Scripts{
    <script src="~/js/responsable.js"></script>
}








    @*  FUNCIONA PARA UNIR NOMBRE EN UNA SOLA CELDA*@


@*@model IEnumerable<PortalEDU.Models.Responsable>*@
    @*@using ProbandoRelaciones.Models*@

    @*@{
        ViewData["Title"] = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h1>Index</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nombre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Apellido)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AlumnoListaProp)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>*@
            @*@foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Apellido)
                    </td>
                    <td>
                        @{ 
                            var responsables = "";
                        }
                        @foreach (var respon in item.AlumnoListaProp)
                        {
                            responsables += @respon.Nombre + ", ";

                        }
                        @responsables.Trim().TrimEnd(',')*@


                        @*@Html.DisplayFor(modelItem => item.AlumnoListaProp)*@
                    @*</td>*@
                    @*<td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }*@
        @*</tbody>
    </table>*@
